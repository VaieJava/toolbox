<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.outdd.toolbox.reptile.novel.dao.NovelDetailsMapper" >
  <resultMap id="BaseResultMap" type="com.outdd.toolbox.reptile.novel.pojo.NovelDetails" >
    <constructor >
      <idArg column="code" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="title" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="author" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="classify" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="over" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="signed" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="score" jdbcType="REAL" javaType="java.lang.Float" />
      <arg column="page_view" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="word_num" jdbcType="BIGINT" javaType="java.lang.Long" />
    </constructor>
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.outdd.toolbox.reptile.novel.pojo.NovelDetails" >
    <constructor >
      <idArg column="code" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="title" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="author" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="classify" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="over" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="signed" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="score" jdbcType="REAL" javaType="java.lang.Float" />
      <arg column="page_view" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="word_num" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="description" jdbcType="LONGVARBINARY" javaType="_byte[]" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    code, title, author, classify, over, signed, score, page_view, word_num
  </sql>
  <sql id="Blob_Column_List" >
    description
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from novel_details
    where code = #{code,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from novel_details
    where code = #{code,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.outdd.toolbox.reptile.novel.pojo.NovelDetails" >
    insert into novel_details (code, title, author, 
      classify, over, signed, 
      score, page_view, word_num, 
      description)
    values (#{code,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, #{author,jdbcType=VARCHAR}, 
      #{classify,jdbcType=VARCHAR}, #{over,jdbcType=INTEGER}, #{signed,jdbcType=INTEGER}, 
      #{score,jdbcType=REAL}, #{pageView,jdbcType=BIGINT}, #{wordNum,jdbcType=BIGINT}, 
      #{description,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="com.outdd.toolbox.reptile.novel.pojo.NovelDetails" >
    insert into novel_details
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="code != null" >
        code,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="author != null" >
        author,
      </if>
      <if test="classify != null" >
        classify,
      </if>
      <if test="over != null" >
        over,
      </if>
      <if test="signed != null" >
        signed,
      </if>
      <if test="score != null" >
        score,
      </if>
      <if test="pageView != null" >
        page_view,
      </if>
      <if test="wordNum != null" >
        word_num,
      </if>
      <if test="description != null" >
        description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="code != null" >
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="author != null" >
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="classify != null" >
        #{classify,jdbcType=VARCHAR},
      </if>
      <if test="over != null" >
        #{over,jdbcType=INTEGER},
      </if>
      <if test="signed != null" >
        #{signed,jdbcType=INTEGER},
      </if>
      <if test="score != null" >
        #{score,jdbcType=REAL},
      </if>
      <if test="pageView != null" >
        #{pageView,jdbcType=BIGINT},
      </if>
      <if test="wordNum != null" >
        #{wordNum,jdbcType=BIGINT},
      </if>
      <if test="description != null" >
        #{description,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.outdd.toolbox.reptile.novel.pojo.NovelDetails" >
    update novel_details
    <set >
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="author != null" >
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="classify != null" >
        classify = #{classify,jdbcType=VARCHAR},
      </if>
      <if test="over != null" >
        over = #{over,jdbcType=INTEGER},
      </if>
      <if test="signed != null" >
        signed = #{signed,jdbcType=INTEGER},
      </if>
      <if test="score != null" >
        score = #{score,jdbcType=REAL},
      </if>
      <if test="pageView != null" >
        page_view = #{pageView,jdbcType=BIGINT},
      </if>
      <if test="wordNum != null" >
        word_num = #{wordNum,jdbcType=BIGINT},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where code = #{code,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.outdd.toolbox.reptile.novel.pojo.NovelDetails" >
    update novel_details
    set title = #{title,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      classify = #{classify,jdbcType=VARCHAR},
      over = #{over,jdbcType=INTEGER},
      signed = #{signed,jdbcType=INTEGER},
      score = #{score,jdbcType=REAL},
      page_view = #{pageView,jdbcType=BIGINT},
      word_num = #{wordNum,jdbcType=BIGINT},
      description = #{description,jdbcType=LONGVARBINARY}
    where code = #{code,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.outdd.toolbox.reptile.novel.pojo.NovelDetails" >
    update novel_details
    set title = #{title,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      classify = #{classify,jdbcType=VARCHAR},
      over = #{over,jdbcType=INTEGER},
      signed = #{signed,jdbcType=INTEGER},
      score = #{score,jdbcType=REAL},
      page_view = #{pageView,jdbcType=BIGINT},
      word_num = #{wordNum,jdbcType=BIGINT}
    where code = #{code,jdbcType=VARCHAR}
  </update>
</mapper>