<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.outdd.toolbox.reptile.novel.dao.NovelVolumeMapper" >
  <resultMap id="BaseResultMap" type="com.outdd.toolbox.reptile.novel.pojo.NovelVolume" >
    <constructor >
      <idArg column="code" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="chapte_cnt" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="word_cnt" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="toll" jdbcType="INTEGER" javaType="java.lang.Integer" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    code, name, chapte_cnt, word_cnt, toll
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from novel_volume
    where code = #{code,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from novel_volume
    where code = #{code,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.outdd.toolbox.reptile.novel.pojo.NovelVolume" >
    insert into novel_volume (code, name, chapte_cnt, 
      word_cnt, toll)
    values (#{code,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{chapteCnt,jdbcType=BIGINT}, 
      #{wordCnt,jdbcType=BIGINT}, #{toll,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.outdd.toolbox.reptile.novel.pojo.NovelVolume" >
    insert into novel_volume
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="code != null" >
        code,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="chapteCnt != null" >
        chapte_cnt,
      </if>
      <if test="wordCnt != null" >
        word_cnt,
      </if>
      <if test="toll != null" >
        toll,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="code != null" >
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="chapteCnt != null" >
        #{chapteCnt,jdbcType=BIGINT},
      </if>
      <if test="wordCnt != null" >
        #{wordCnt,jdbcType=BIGINT},
      </if>
      <if test="toll != null" >
        #{toll,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.outdd.toolbox.reptile.novel.pojo.NovelVolume" >
    update novel_volume
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="chapteCnt != null" >
        chapte_cnt = #{chapteCnt,jdbcType=BIGINT},
      </if>
      <if test="wordCnt != null" >
        word_cnt = #{wordCnt,jdbcType=BIGINT},
      </if>
      <if test="toll != null" >
        toll = #{toll,jdbcType=INTEGER},
      </if>
    </set>
    where code = #{code,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.outdd.toolbox.reptile.novel.pojo.NovelVolume" >
    update novel_volume
    set name = #{name,jdbcType=VARCHAR},
      chapte_cnt = #{chapteCnt,jdbcType=BIGINT},
      word_cnt = #{wordCnt,jdbcType=BIGINT},
      toll = #{toll,jdbcType=INTEGER}
    where code = #{code,jdbcType=VARCHAR}
  </update>
</mapper>